# mongo 语句不需要 ; 结尾
mongo> help                             # 查看 mongo 支持哪些命令
mongo> db               # 查看当前在哪个数据库下
mongo> show dbs         # 列出所有数据库
mongo> show collections                 # 列出当前数据库下所有 collection
mongo> use dbname           # 使用一个数据库，不存在则创建


# Database CRUD
mongo> db.help()            # 查看当前 database 能使用哪些方法
mongo> use newDbName        # 创建新数据库
mongo> db.dropDatabase()    # 删除当前 database


# User CRUD
mongo> db.createUser(       # 创建 user
    {
      user: "<name>",
      pwd: passwordPrompt(),      // Or  "<cleartext password>"
      customData: { <any information> },
      roles: [
        { role: "<role>", db: "<database>" } | "<role>",
        ...
      ],
      authenticationRestrictions: [
         {
           clientSource: ["<IP>" | "<CIDR range>", ...]
           serverAddress: ["<IP>" | "<CIDR range>", ...]
         },
         ...
      ],
      mechanisms: [ "<SCRAM-SHA-1|SCRAM-SHA-256>", ... ],
      passwordDigestor: "<server|client>"
    }, 
    writeConcern
)        

mongo> use admin
mongo> db.system.users.find().pretty();


# Collection CRUD
mongo> db.myCollection.help()   # 查看当前 collection 能使用哪些方法
mongo> db.createCollection(name, options)  # 创建 collection 
mongo> db.org.drop()            # 删除 collection
mongo> db.org.insertOne({name:"orgName", year:2019})  # 增加数据，如果 collection 不存在，则创建


# Document CRUD
mongo> db.org.insertOne({name:"orgName", year:2019})
mongo> db.org.insertMany([{name:"orgName", year:2019},{name:"orgName2", year:1902}])
mongo> db.org.remove(
   <query>,
   {
     justOne: <boolean>,
     writeConcern: <document>
   }
)
mongo> db.org.find({name:"orgName1"})
mongo> db.org.update(<query>,
   <update>,
   {
     upsert: <boolean>,
     multi: <boolean>,
     writeConcern: <document>
   }
)




