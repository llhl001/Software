######## 帮助
:help                               # 打开自带的帮助文档
:help m                             # 获取 Normal 模式下 m 命令
:help :m                            # 获取 Command 模式下 m 命令

######## 自动执行的命令
:verbose autocmd                    # 查看所有 autocmd 命令，verbose 显示其定义位置


######## 历史命令
:history                            # : 命令的史命令
:history /                          # 搜索命令的历史命令
:se<Up>                             # 带出 se 开头的历史命令

######## 寄存器
:reg                                # 查看所有寄存器中的值
:reg ""                             # 查看 "" 寄存器的值

######## 书签
:marks                              # 查看书签列表
:marks a                            # 查看 a 书签的信息

######## 字体
:set guifont=*                      # 查看 gvim 支持的所有字体

######## 工作目录
:pwd                                # 查看当前路径
:cd ./dir                           # 切换当前 vim 的工作目录
:lcd ./dir                          # 切换当前 窗口 的工作目录
:set autochdir                      # 自动设当前编辑的文件所在目录为当前工作路径

######## Miscellaneous
:nohl                               # 取消搜索后的高亮显示
:set paste                          # 原样粘贴，不自动缩进
:set nopaste                        # 重新开启缩进
:67                                 # 光标移动到 67 行      

:r !cmd                             # 将 shell 命令结果插入到当前光标所在行的下一行
:put=getcwd()                       # 插入当前目录


 


    






""""""""""""""""""""""""""""""""""""""" 查找替换 """"""""""""""""""""""""""""""""""""""""""""""""""""""""
" :help pattern                 获取正则表达式帮助文档
" \vpattern                     建议正则表达式前面都是用 \v 表示使用 very magic 模式                            
"""""""""""""""""""" 查找替换命令中，正则表达式修饰符含义
    g               全不匹配，如果没有，只匹配第一个
    i               忽略大小写
    c               每一个替换前都询问
    y               替换当前匹配，并继续下一个
    n               不替换当前匹配，并继续下一个
    a               全部替换，并退出
    q               不替换，退出
    l               替换当前匹配后退出
    ^E              <Ctrl-e> 页面下滚
    ^Y              <Ctrl-y> 页面上滚
"""""""""""""""""""" 查找替换命令中的各种符号的含义
    %               表示整个文本（相当于 1,$)
    9               表示文件第 9 行行末
    $               表示文件最后一行
    .               表示当前光标所在行
    'm              表示标记 m 所在的行
    '<              表示选择区的第一行
    '>              表示选择区的最后一行
"""""""""""""""""""" @trap
    \n              正则表达式 匹配的 = 换行，替换时 = 0x00 = null
    \r              正则表达是 匹配时 = 回车，替换时 = 换行  
"""""""""""""""""""" @Demo
    :s/str1/str2                        # 表示将当前行第一个 str1 替换成 str2
    :s/\vstr1/str2                      # very magic 模式
    :s/str1/str2/g                      # 表示将当前行所有 str1 替换成 str2
    :%s/s1/s2                           # 表示将当前文件中每一行的第一个 str1 替换成 str2
    :%s/s1/s2/g                         # 表示将当前文件中所有 str1 替换成 str2
    :9,$s/old/new/g                     # 从第9行到最后一行
    :.,$s/old/new/g                     # 从当前行到最后一行
    :1,$s/old/new/g                     # 从第一行到最后一行每一行的第一个   
    :'<,'>s/old/new/g                   # 在选中区域替换文本
    :s+vivian/+sky/                     # 把分隔符从 / 替换为 + 这样 / 就能被识别出来


""""""""""""""""""""""""""""""""""""""" 需要范围参数的命令 """"""""""""""""""""""""""""""""""""""""""""""""""""""""
" 输入命令之后，光标变成 半个字符 闪烁表示需要输入 范围参数
""""""""""""""""""""" 范围参数
    Space                       光标所在位置字符
    dd                          重复命令，光标所在行，如 dd yy == >>
    $                           从光标起始位置到行尾
    ^                           从光标起始位置到行首，不包含缩进空白
    0                           从光标起始位置到行首，包含缩进空白
    gg                          从光标位置到文件头
    G                           从光标位置到文件尾

    fa                          从光标位置到右边首次出现该字符的位置
    Fa                          从光标位置到左边首次出现该字符的位置
    ta                          从光标位置到右边首次出现该字符的位置的前一个字符
    Ta                          从光标位置到左边首次出现该字符的位置的后一个字符

    /regexp                     从光标位置到下一个正则表达式匹配的字符串
    ?regexp                     从光标位置到上一个正则表达式匹配的字符串

    iw                          一个单词（i 可理解为 in，下同） 
    aw                          一个单词加一个空格 （a 可理解为“一个”，下同） 
    i"                          光标所在 "(双引号) 字符串内部的范围， 同理可得：i<, i[, i( 
    a"                          光标所在 "(双引号) 字符串内部的范围，包括 "(双引号本身)，同理可得：a<, a[, a(  
    %                           从光标所在括号，匹配的另一个括号

""""""""""""""""""""" 范围参数命令
    d<RangeParam>               删除，指定范围内的内容
    y<RangeParam>               复制，指定范围内的内容
    c<RangeParam>               修改
    =<RangeParam>               自动格式化，指定范围的内容
    >                           缩进
    <                           反缩进
    gu                          转小写
    gU                          转大写









# 执行 shell 命令，再回到 vim
:shell
shell> exit


# 重定向命令输出位置
:help redir                             # 查看重定向帮助
:redir @a>
:set all
"ap
:redir END

# 打印命令
:echo 'abcd' | clip                     # Windows 将内容复制到系统剪贴板
:echo 'abce' | xsel                     # Linux 下将内容复制到系统剪贴板
:echo 'abce' | xsel -b                  # 如果上面命令有问题，加 -b 选项试试
:messages                               # 查看 echom 输出的所有历史内容
:messages clear                         # 清空 messages








