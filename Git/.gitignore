# .gitignore忽略规则的匹配语法
# 在 .gitignore 文件中，每一行的忽略规则的语法如下：
# 1) 空格不匹配任意文件，可作为分隔符，可用反斜杠转义
# 2) 以“＃”开头的行都会被 Git 忽略。即#开头的文件标识注释，可以使用反斜杠进行转义。
# 3) 可以使用标准的glob模式匹配。所谓的glob模式是指shell所使用的简化了的正则表达式。
# 4) /xxx           匹配根目录（.git 隐藏目录所在的目录）下名为 xxx 的文件
#    /xxx/          匹配根目录（.git 隐藏目录所在的目录）下名为 xxx 的目录及其该目录下的所有内容
#    xxx/yyy        匹配相对于当前 .gitignore 文件路径的内容，一般 .gitignore 文件和 .git 文件夹在同一目录下
# 5) 以星号"*"通配多个字符，即匹配多个任意字符；使用两个星号"**" 表示匹配任意中间目录，比如`a/**/z`可以匹配 a/z, a/b/z 或 a/b/c/z等。
# 6) 以问号"?"通配单个字符，即匹配一个任意字符；
# 7) 以方括号"[]"包含单个字符的匹配列表，即匹配任何一个列在方括号中的字符。比如[abc]表示要么匹配一个a，要么匹配一个b，要么匹配一个c；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配。比如[0-9]表示匹配所有0到9的数字，[a-z]表示匹配任意的小写字母）。
# 8) 以叹号"!"表示不忽略(跟踪)匹配到的文件或目录，即要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。需要特别注意的是：如果文件的父目录已经被前面的规则排除掉了，那么对这个文件用"!"规则是不起作用的。也就是说"!"开头的模式表示否定，该文件将会再次被包含，如果排除了该文件的父级目录，则使用"!"也不会再次被包含。可以使用反斜杠进行转义。




# ! 开头表示反规则
# / 开头表示路径，为项目根路径， ** 表示任意层中间目录
# / 结尾表示目录
# 其他开头看末尾，没有 / 结尾就是文件，否则是目录
# * ? [abc] 表示模糊匹配

# @trap # 注释不能像 java 中一样放在代码后面，只能在行开头，即下面一行规则无效
/*.a    # 注释放在这里，会让整行规则失效

# 排除掉根目录（即 .gitignore 文件所在的目录）下，所有 .kasei 结尾的问题
/*.kasei       

# 排除掉任何名为 out 的目录
/**/out/    
/**/build/


# 排除 /ProjectName/.gradle 目录
/.gradle/
