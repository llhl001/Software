查看缓存区中的文件 {
    
}

清空缓存区 {
    shell> git reset --mixed HEAD       # 使用当前版本库中的 HEAD 指针的指向的版本，重置缓存区
}

修改缓存区 {
    shell> git reset -- .               # 使用本地库中 HEAD 指向的版本覆盖当前缓存区
}


查看缓存区文件版本差异 {
    shell> git diff --cached                    # 比较缓存区和版本库之间的差别
}



提交缓存区中的修改到本地库 {
    shell> git commit . -m 'comment'            # 提交 缓存区 内容到 本地仓库，并输入 -m 为本次提交的 说明
    shell> git commit -- .                      # 不解析所有参数 
    shell> git commit . -i                      # 提交一个没有保存的内容之前，先保存命令行路径中的内容
    shell> git commit . -a                      # 提交所有已经被跟踪的文件的修改或删除，但是对未跟踪的文件无效
    shell> git commit --reedit-message=<commit>     # 重新编辑一个提交的注释信息
    shell> git commit --amend                       # 替换上一次 commit
    shell> git commit --patch                       # 交互模式提交
}



