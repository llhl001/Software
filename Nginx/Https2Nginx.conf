worker_processes            auto;

events {
    worker_connections      1024;
}


http {
    include                 mime.types;
    default_type            application/octet-stream;
    sendfile                on;
    keepalive_timeout       65;
    
    server {
        listen              80;
        listen              [::]:80;
        server_name         _;
        return              301 https://$host$request_uri;
    }

    server {
        listen                          443 ssl http2 default_server;
        listen                          [::]:443 ssl http2 default_server;
        server_name                     localhost;


        # ssl settings
        ssl_buffer_size                 16k;
        #ssl_client_certificate          /root/ca/rootca.crt.pem;              # 用于客户端证书认证，银行U盾，双向认证
        
        ssl_certificate                 /root/ca/certs/nginx.crt.pem;
        # 如果使用 CloudFlare 做 CDN，那么需要使用 CloudFlare 自己 CA 证书签名的用户证书才行
        # ssl_certificate                 /root/ca/certs/nginx.cloudflare.crt.pem;     
        ssl_certificate_key             /root/ca/nginx.key.pem;
        # 使用 shell> openssl ciphers -v 'HIGH:!aNULL:!MD5' 来查看 HIGH:!aNULL:!MD5 到底使用哪些加密套件，以及套件的优先级       
        ssl_ciphers                     TLSv1.2+ECDHE-ECDSA-CHACHA20-POLY1305;      # 使用 CloudFlare 可能不支持该加密套件
        ssl_ecdh_curve                  auto;
        ssl_prefer_server_ciphers       on;
        # @trap shell> openssl ciphers 对 TLSv1.3 的协议过滤无效
        ssl_protocols                   TLSv1.2;      
        ssl_session_cache               shared:SSL:1m;
        ssl_session_timeout             60m;


        location / {
            root                        html;
            index                       index.html;
        }
        
        location /v2ray/ladder/ {
            # 注意：如果转发的话，那 Nginx 就相当于 Browser，而 V2ray 相当于 Nginx
            proxy_pass http://websocket;
            
            proxy_set_header Host                   $host;
            proxy_set_header X-Real-IP              $remote_addr;
            proxy_set_header X-Forwarded-For        $proxy_protocol_addr;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade                $http_upgrade;
            proxy_set_header Connection             "upgrade";
            
            
            # proxy_ssl_trusted_certificate /root/ca/rootca.crt.pem;
            # proxy_ssl_certificate     /etc/nginx/client.pem;        # 相当于未代理时，Browser 端的证书，用于双向认证，一般用不到
            # proxy_ssl_certificate_key /etc/nginx/client.key;
        }
        
        
    }
    
    upstream websocket {
        server localhost:12306;      # 转发到服务器上相应的ws端口
    }

}


