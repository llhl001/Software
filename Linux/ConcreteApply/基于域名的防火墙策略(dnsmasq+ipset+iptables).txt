dnsmasq {
    shell> yum install dnsmasq              # 安装 dnsmasq
    /etc/dnsmasq.conf                       # 该文件是 dnsmasq 原生的配置文件，
    /etc/dnsmasq.d                          # 该目录下所有文件中的配置内容，相当于写在 /etc/dnsmasq.conf 中
    
    shell> vim /etc/dnsmasq.conf            # 编辑配置文件，配置 dnsmasq
        添加或修改        
        port=5353       # 用指定的端口代替默认的DNS 53端口，如果设置为0，则完全禁止DNS功能，只使用dhcp服务        
        strict-order        # 严格按照 /etc/resolv.conf 定义的 DNS 顺序发送 DNS 请求，如果失败了，再使用第二个 DNS
        conf-dir=/etc/dnsmasq.d     # dnsmasq 配置目录路径       
        listen-address=127.0.0.1    # 监听本地 dns 请求        
        address=/www.thekelleys.org.uk/fe80::20d:60ff:fe36:f83  # 强制解析到你指定的地址上
        server=/google.com/8.8.8.8#5353     # google.com 域名及其子域名，使用 8.8.8.8 这个域名服务器解析，DNS 请求发送到域名服务器的 5353 端口
        ipset=/1291114093.ml/google.com/vps4,vps6     # 将 129.ml 和 google.com 两个域名及子域名的解析结果记录到名为 vps4 和 vps6 的 ipset 中        

}

NetworkManager 配置 {
    shell> vim /etc/NetworkManager/NetworkManager.conf      # 编辑 NM 的配置文件
        [main]
        dns=dnsmasq             # 添加或修改该行
        
    shell> touch /etc/NetworkManager/dnsmasq.d/vps.conf     # 由于通过 NM 使用 dnsmasq 所以要将配置文件配置在这个地方
    shell> vim /etc/NetworkManager/dnsmasq.d/vps.conf       # 编辑配置文件，格式跟原生配置文件一样
    shell> systemctl restart NetworkManager                 # 重启 NM 服务，使新配置生效
}


ipset 配置 {
    shell> ipset create vps4 hash:ip        # 创建一个名为 vps ，类型为 hash:ip 的 ipset
    shell> ipset destory vps4               # 删除一个名为 vps 的 ipset
    shell> ipset save > /etc/ipset.conf     # 将当前所有 ipset 信息持久化到 /etc/ipset.conf
    可以创建一个开机自执行服务 和 关机自执行服务，来对 ipset 做持久化处理，具体操作见 Linux/service 操作手册
}

开启内核转发功能 {
    shell> vim /etc/sysctl.conf
    添加或修改
    net.ipv4.ip_forward = 1
    shell> sysctl -p    # 从默认配置文件（/etc/sysctl.conf）中读取参数值，并使参数值立刻生效
}


检测是否成功 {
    shell> ping 1291114093.ml
    shell> ipset list                   # 查看名为 vps4 的 ipset 的 Members 属性下面是否有 自己 VPS 的 ip 地址，有则成功
}

iptable 配置 {
    
}

    



